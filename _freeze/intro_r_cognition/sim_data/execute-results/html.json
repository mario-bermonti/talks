{
  "hash": "23c405878014ba4d3dff93482d41d3af",
  "result": {
    "markdown": "---\ntitle: \"Simuldate data for workshop\"\nformat: \n    html:\n        df-print: kable\n---\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(faux)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n************\nWelcome to faux. For support and examples visit:\nhttps://debruine.github.io/faux/\n- Get and set global package options with: faux_options()\n************\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.4.2     ✔ purrr   1.0.2\n✔ tibble  3.2.1     ✔ dplyr   1.1.1\n✔ tidyr   1.2.0     ✔ stringr 1.4.1\n✔ readr   2.1.2     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ purrr::%||%()   masks faux::%||%()\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/MBP/coding/talks\n```\n:::\n\n```{.r .cell-code}\nset.seed(34)\n```\n:::\n\n\n## Simulate data\n### DSF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbetween <- list(group = c(\"healthy\", \"depression\"))\nmeans <- list(\n    c(\"healthy\" = 6, \"depression\" = 5)\n)\nsds <- list(\n    c(\"healthy\" = 2, \"depression\" = 2)\n)\n\ndata_dsf <- sim_design(\n    between = between,\n    mu = means,\n    sd = sds,\n    n = 50,\n    dv = \"digit_span_forward\"\n)\n```\n\n::: {.cell-output-display}\n![](sim_data_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nhead(data_dsf)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|id   |group   | digit_span_forward|\n|:----|:-------|------------------:|\n|S001 |healthy |           5.330554|\n|S002 |healthy |           4.348107|\n|S003 |healthy |           8.362217|\n|S004 |healthy |           2.243754|\n|S005 |healthy |           7.797086|\n|S006 |healthy |           5.468781|\n\n</div>\n:::\n\n```{.r .cell-code}\nstr(data_dsf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nClasses 'faux' and 'data.frame':\t100 obs. of  3 variables:\n $ id                : chr  \"S001\" \"S002\" \"S003\" \"S004\" ...\n $ group             : Factor w/ 2 levels \"healthy\",\"depression\": 1 1 1 1 1 1 1 1 1 1 ...\n $ digit_span_forward: num  5.33 4.35 8.36 2.24 7.8 ...\n - attr(*, \"design\")=List of 11\n  ..$ within : list()\n  ..$ between:List of 1\n  .. ..$ group:List of 2\n  .. .. ..$ healthy   : chr \"healthy\"\n  .. .. ..$ depression: chr \"depression\"\n  ..$ dv     :List of 1\n  .. ..$ digit_span_forward: chr \"digit_span_forward\"\n  ..$ id     :List of 1\n  .. ..$ id: chr \"id\"\n  ..$ vardesc:List of 1\n  .. ..$ group: chr \"group\"\n  ..$ n      :List of 2\n  .. ..$ healthy   : num 50\n  .. ..$ depression: num 50\n  ..$ mu     :List of 2\n  .. ..$ healthy   :List of 1\n  .. .. ..$ digit_span_forward: num 6\n  .. ..$ depression:List of 1\n  .. .. ..$ digit_span_forward: num 5\n  ..$ sd     :List of 2\n  .. ..$ healthy   :List of 1\n  .. .. ..$ digit_span_forward: num 2\n  .. ..$ depression:List of 1\n  .. .. ..$ digit_span_forward: num 2\n  ..$ r      : list()\n  ..$ sep    : chr \"_\"\n  ..$ params :'data.frame':\t2 obs. of  4 variables:\n  .. ..$ . : Factor w/ 2 levels \"healthy\",\"depression\": 1 2\n  .. ..$ n : num [1:2] 50 50\n  .. ..$ mu: num [1:2] 6 5\n  .. ..$ sd: num [1:2] 2 2\n  ..- attr(*, \"class\")= chr [1:2] \"design\" \"list\"\n```\n:::\n:::\n\n\n### DSB\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbetween <- list(group = c(\"healthy\", \"depression\"))\nmeans <- list(\n    c(\"healthy\" = 5.5, \"depression\" = 4.5)\n)\nsds <- list(\n    c(\"healthy\" = 1.5, \"depression\" = 1.5)\n)\n\ndata_dsb <- sim_design(\n    between = between,\n    mu = means,\n    sd = sds,\n    n = 50,\n    dv = \"digit_span_backward\"\n)\n```\n\n::: {.cell-output-display}\n![](sim_data_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nhead(data_dsb)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|id   |group   | digit_span_backward|\n|:----|:-------|-------------------:|\n|S001 |healthy |            5.994967|\n|S002 |healthy |            4.467299|\n|S003 |healthy |            4.563491|\n|S004 |healthy |            3.691092|\n|S005 |healthy |            5.238488|\n|S006 |healthy |            5.171590|\n\n</div>\n:::\n\n```{.r .cell-code}\nstr(data_dsb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nClasses 'faux' and 'data.frame':\t100 obs. of  3 variables:\n $ id                 : chr  \"S001\" \"S002\" \"S003\" \"S004\" ...\n $ group              : Factor w/ 2 levels \"healthy\",\"depression\": 1 1 1 1 1 1 1 1 1 1 ...\n $ digit_span_backward: num  5.99 4.47 4.56 3.69 5.24 ...\n - attr(*, \"design\")=List of 11\n  ..$ within : list()\n  ..$ between:List of 1\n  .. ..$ group:List of 2\n  .. .. ..$ healthy   : chr \"healthy\"\n  .. .. ..$ depression: chr \"depression\"\n  ..$ dv     :List of 1\n  .. ..$ digit_span_backward: chr \"digit_span_backward\"\n  ..$ id     :List of 1\n  .. ..$ id: chr \"id\"\n  ..$ vardesc:List of 1\n  .. ..$ group: chr \"group\"\n  ..$ n      :List of 2\n  .. ..$ healthy   : num 50\n  .. ..$ depression: num 50\n  ..$ mu     :List of 2\n  .. ..$ healthy   :List of 1\n  .. .. ..$ digit_span_backward: num 5.5\n  .. ..$ depression:List of 1\n  .. .. ..$ digit_span_backward: num 4.5\n  ..$ sd     :List of 2\n  .. ..$ healthy   :List of 1\n  .. .. ..$ digit_span_backward: num 1.5\n  .. ..$ depression:List of 1\n  .. .. ..$ digit_span_backward: num 1.5\n  ..$ r      : list()\n  ..$ sep    : chr \"_\"\n  ..$ params :'data.frame':\t2 obs. of  4 variables:\n  .. ..$ . : Factor w/ 2 levels \"healthy\",\"depression\": 1 2\n  .. ..$ n : num [1:2] 50 50\n  .. ..$ mu: num [1:2] 5.5 4.5\n  .. ..$ sd: num [1:2] 1.5 1.5\n  ..- attr(*, \"class\")= chr [1:2] \"design\" \"list\"\n```\n:::\n:::\n\n\n### Merge data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- merge(\n    data_dsf, \n    data_dsb[, c(\"id\", \"digit_span_backward\")],\n    by = \"id\"\n)\nhead(data)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|id   |group   | digit_span_forward| digit_span_backward|\n|:----|:-------|------------------:|-------------------:|\n|S001 |healthy |           5.330554|            5.994967|\n|S002 |healthy |           4.348107|            4.467299|\n|S003 |healthy |           8.362217|            4.563491|\n|S004 |healthy |           2.243754|            3.691092|\n|S005 |healthy |           7.797086|            5.238488|\n|S006 |healthy |           5.468781|            5.171590|\n\n</div>\n:::\n\n```{.r .cell-code}\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 100   4\n```\n:::\n:::\n\n\n## Format data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data |>\n    mutate(\n        across(\n            where(is.numeric),\n            round,\n            0\n        )\n    )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(where(is.numeric), round, 0)`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n```\n:::\n\n```{.r .cell-code}\nhead(data)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|id   |group   | digit_span_forward| digit_span_backward|\n|:----|:-------|------------------:|-------------------:|\n|S001 |healthy |                  5|                   6|\n|S002 |healthy |                  4|                   4|\n|S003 |healthy |                  8|                   5|\n|S004 |healthy |                  2|                   4|\n|S005 |healthy |                  8|                   5|\n|S006 |healthy |                  5|                   5|\n\n</div>\n:::\n:::\n\n\n## Fix impossible values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data |>\n    mutate(\n        digit_span_forward = if_else(\n            digit_span_forward < 2,\n            2,\n            digit_span_forward\n        ),\n        digit_span_backward = if_else(\n            digit_span_backward < 2,\n            2,\n            digit_span_backward\n        ),\n    )\n```\n:::\n\n\n## Check data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |>\n    group_by(group) |>\n    summarise(\n        min_dsf = min(digit_span_forward),\n        mean_dsf = mean(digit_span_forward),\n        sd_dsf = sd(digit_span_forward),\n        max_dsf = max(digit_span_forward),\n        min_dsb = min(digit_span_backward),\n        mean_dsb = mean(digit_span_backward),\n        sd_dsb = sd(digit_span_backward),\n        max_dsb = max(digit_span_backward)\n    )\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|group      | min_dsf| mean_dsf|   sd_dsf| max_dsf| min_dsb| mean_dsb|   sd_dsb| max_dsb|\n|:----------|-------:|--------:|--------:|-------:|-------:|--------:|--------:|-------:|\n|healthy    |       2|     5.78| 2.063186|      10|       2|     5.40| 1.538618|       9|\n|depression |       2|     4.88| 1.814229|       9|       2|     4.22| 1.374550|       7|\n\n</div>\n:::\n:::\n\n\n## Save data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath_data <- here('intro_r_cognition/data.csv')\ndata |>\n    write_csv(path_data)\n```\n:::",
    "supporting": [
      "sim_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}